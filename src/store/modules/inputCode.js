export default {
  namespaced: true,
  state: {
    sampleText: `CREATE TABLE DEPARTAMENTOS(
  D# CHAR(2) NOT NULL,
  DNOMBRE CHAR(6) NOT NULL,
  CONSTRAINT PK_DEPARTAMENTOS PRIMARY KEY(D#));
  CREATE TABLE CARRERAS(
    C# CHAR(2) NOT NULL,
    CNOMBRE CHAR(3) NOT NULL,
    VIGENCIA CHAR(4) NOT NULL,
    SEMESTRES NUMERIC(2) NOT NULL,
    D# CHAR(2) NOT NULL,
    CONSTRAINT PK_CARRERAS PRIMARY KEY(C#),
    CONSTRAINT FK_CARRERAS FOREIGN KEY (D#) REFERENCES DEPARTAMENTOS(D#));
    CREATE TABLE ALUMNOS(
      A# CHAR(2) NOT NULL,
      ANOMBRE CHAR(20) NOT NULL,
      GENERACION CHAR(4) NOT NULL,
      SEXO CHAR(1) NOT NULL,
      C# CHAR(2) NOT NULL,
      CONSTRAINT PK_ALUMNOS PRIMARY KEY(A#),
      CONSTRAINT FK_ALUMNOS FOREIGN KEY(C#)REFERENCES CARRERAS(C#));
      CREATE TABLE MATERIAS(
        M# CHAR(2) NOT NULL,
        MNOMBRE CHAR(6) NOT NULL,
        CREDITOS NUMERIC(2) NOT NULL,
        C# CHAR(2) NOT NULL,
        CONSTRAINT PK_MATERIAS PRIMARY KEY(M#),
        CONSTRAINT FK_MATERIAS FOREIGN KEY (C#) REFERENCES CARRERAS(C#));
        CREATE TABLE PROFESORES(
          P# CHAR(2) NOT NULL,
          PNOMBRE CHAR(20) NOT NULL,
          EDAD NUMERIC(2) NOT NULL,
          SEXO CHAR(1)NOT NULL,
          ESP CHAR(4) NOT NULL,
          GRADO CHAR(3) NOT NULL,
          D# CHAR(2) NOT NULL,
          CONSTRAINT PK_PROFESORES PRIMARY KEY(P#),
          CONSTRAINT FK_PROFESORES FOREIGN KEY (D#) REFERENCES DEPARTAMENTOS(D#));
          CREATE TABLE INSCRITOS(
            R# CHAR(3) NOT NULL,
            A# CHAR(2) NOT NULL,
            M# CHAR(2) NOT NULL,
            P# CHAR(2) NOT NULL,
            TURNO CHAR(1) NOT NULL,
            SEMESTRE CHAR(6) NOT NULL,
            CALIFICACION NUMERIC(3) NOT NULL,
            CONSTRAINT PK_INSCRITOS PRIMARY KEY(R#),
            CONSTRAINT FK_INSCRITOS_01 FOREIGN KEY (A#) REFERENCES ALUMNOS(A#),
            CONSTRAINT FK_INSCRITOS_02 FOREIGN KEY (M#) REFERENCES MATERIAS(M#),
            CONSTRAINT FK_INSCRITOS_03 FOREIGN KEY (P#) REFERENCES PROFESORES(P#));`,
  },
  mutations: {
    SET_SAMPLE_TEXT(state, payload) {
      state.sampleText = payload;
    },
  },
};
